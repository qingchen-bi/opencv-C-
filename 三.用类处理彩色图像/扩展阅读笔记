static_cast<type_id>(espress）将espress转化为type_id类型

absdiff（）计算两个图像的差距，并输出，第三个参数为输出的差值。

城区距离对于三通道的图像为：将得到的差值进行分割，然后将三个通道的对应差值累加。
output为输出的差值图像
std::vector<cv::Mat> images;
cv::split(output,images);
// 3个通道相加（这里可能出现饱和的情况）
output= images[0]+images[1]+images[2];

    HSV
色调 饱和度 明度
饱和度只计算BGR中最大值和最小值的相对
差距， 因此像（1, 0, 0） 这样的组合就会得到饱和度1.0， （1-0）/1 = 1
    颜色的色调通常用0~360的角度来表示， 其中红色是0度。 对于8位图
像， OpenCV把角度除以2， 以适合单字节的存储范围。 因此， 每个色
调值对应指定颜色的色彩， 与亮度和饱和度无关。 例如天空和水的色
调是一样的， 约为200度（强度100） ， 对应色度为蓝色； 背景树林的
色调约为90度， 对应色度为绿色。 有一点要特别注意， 如果颜色的饱
和度很低， 它计算出来的色调就不可靠
    HSB
    色彩空间通常用一个圆锥体来表示， 圆锥体
内部每个点代表一种特定的颜色。 角度位置表示颜色的色调， 到中轴
线的距离表示饱和度， 高度表示亮度。 圆锥体的顶点表示黑色， 它的
色调和饱和度是没有意义的

cvtColor（）；//不同颜色空间转换。
