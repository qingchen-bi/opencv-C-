第七章：提取直线轮廓 区域

	1.Canny算子检测图像轮廓
	函数：cv::Canny();
	
	原理：基于第六章的Sobel算子
		引入了两个阈值
		高阈值只保留重要的边缘，低阈值去除不连续的边缘点，使连续的连接到高阈值保留下来的边缘上，从而孤立的被去除
		
		
	2.霍夫变换检测直线
		cv::HoughLines()
		检测边缘像素的对齐区域
		输入的使Canny检测轮廓后的二值图片
		
		原理：检测图像中穿过某一个像素点的所有直线，然后就是判断是否有同一个直线穿过了很多的像素点，即认定是直线。为了标记某条直线被标记的次数，引入累加器
		
		概率霍夫变换：排除恰巧边缘像素对齐的区域
		
		还可以检测其他简单形状
		
		
	3.提取区域的轮廓
		先是利用直方图反向投影等方法获得二值图像
		然后就是提取出物体
		
		阈值化操作，开启闭合形态学滤波器得到图像
		提取物体，其实就是提取连通区域
		
		函数：cv::findContours();//输入二值图像，得到轮廓的向量，可以检测外部轮廓也可以检测内部
		
		原理：扫面图像得到连通区域，从联通区域的起点开始沿着轮廓标记边界像素，再找下一个区域。
		最后保存下所有轮廓，在根据阈值去除一些轮廓
		
	4.计算区域的形状描述子
		连通区域通常代表着场景中的某个物体，为了识别该物体，或将他与其他图象元素比较，需要对此区域测量，已提取出部分特征。
		特征：用于描述连通区域的形状，形状描述子
		
		几种描述形状的函数：计算轮廓的形状描述子
		圈一：边界框
			Cv::Rect r0  = cv::boundingRect(contours[0]);     //contours[]储存了由findContours提取出的轮廓。
			Cv::rectangle(result,r0,0,2);
			
		圈二：最小覆盖圆
		
		原理：
		在表示和定位图像中的区域方法中， 边界框可能是最简洁的。 它的
		定义是： 能完整包含该形状的最小垂直矩形。 比较边界框的高度和宽
		度， 可以获得物体的在垂直或水平方向的范围。 最小覆盖圆通常用
		在只需要区域尺寸和位置的近似值的情况。
		如果要更紧凑地表示区域的形状， 可采用多边形逼近。
		
		轮廓矩：
		轮廓矩是形状结构分析中常用的数学模型。 OpenCV定义了一个数据
		结构， 封装了形状中计算得到的所有轮廓矩。 它是函
		数cv::moments的返回值。 这些轮廓矩共同代表了物体形状的紧凑
		程度， 常用于特征识别。 我们只是用该结构获得每个区域的重心， 这
		里用前面三个空间轮廓矩计算得到。
